<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
         http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- import the other 3 spring xml files -->
    <import resource="classpath:META-INF/spring/camel-tx.xml"/>
    <import resource="classpath:META-INF/spring/camel-cxf.xml"/>
    <import resource="classpath:META-INF/spring/camel-ftp.xml"/>

    <!-- define the transactional error handler with redelivery policy -->
    <bean id="myErrorHandler" class="org.apache.camel.spring.spi.TransactionErrorHandlerBuilder">
        <property name="redeliveryPolicy" ref="myPolicy"/>
    </bean>

    <!-- we want to redeliver at most 3 times with 5 sec apart -->
    <bean id="myPolicy" class="org.apache.camel.processor.RedeliveryPolicy">
        <!-- use 1 sec interval between redeliveries -->
        <property name="redeliverDelay" value="1000"/>
        <!-- try at most 5 times -->
        <property name="maximumRedeliveries" value="5"/>
        <!-- log at WARN level when a redelivery is attempted -->
        <property name="retryAttemptedLogLevel" value="WARN"/>
    </bean>

    <!-- the order bean contain all the business logic -->
    <bean id="order" class="camelinaction.OrderService"/>

    <!-- and the DAO for accessing the database -->
    <bean id="orderDao" class="camelinaction.OrderDAO"/>

    <!-- the camel route -->
    <camelContext trace="true" xmlns="http://camel.apache.org/schema/spring">

        <onException>
            <!-- policy for when any exception occurred -->
            <exception>java.lang.Exception</exception>
            <!-- retry it at most 3 times -->
            <redeliveryPolicy maximumRedeliveries="3"/>
            <!-- in case of still failure then lets handle it our self -->
            <handled><constant>true</constant></handled>
            <!-- where we transform a custom reply message with the error -->
            <transform><method bean="order" method="replyError"/></transform>
            <!-- and important to mark the transaction to still rollback even if we handled the exception -->
            <rollback markRollbackOnly="true"/>
        </onException>

        <route errorHandlerRef="myErrorHandler">
            <!-- route starts from the cxf webservice, see camel-cxf.xml for details -->
            <from uri="cxf:bean:acmeOrderEndpoint"/>
            <!-- use transaction -->
            <transacted/>
            <!-- insert a copy of the order in the database -->
            <bean ref="orderDao" method="insertOrder"/>
            <!-- set filename as the reference number -->
            <setHeader headerName="CamelFileName"><method bean="order" method="computeFileName"/></setHeader>
            <!-- process the order -->
            <bean ref="order" method="processOrder"/>
            <!-- prepare the reply to CSV format -->
            <bean ref="order" method="toCsv"/>
            <!-- and upload it to the FTP server -->
            <to uri="ftp://rider@localhost:21000?password=secret"/>
            <!-- and then create the OK reply for the webservice which is still waiting for a reply -->
            <transform><method bean="order" method="replyOk"/></transform>
        </route>

    </camelContext>

</beans>
